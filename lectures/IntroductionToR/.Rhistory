a <- 10 #example
a2 <- 100 #example
v <- sort(runif(1e7,0,1000));  #example
Rcpp::cppFunction('int min_index(NumericVector v, double a) {
NumericVector::iterator low=std::lower_bound (v.begin(), v.end(), a);
return (low - v.begin() + 1);
}')
Rcpp::cppFunction('int max_index(NumericVector v, double a) {
NumericVector::iterator up=std::upper_bound (v.begin(), v.end(), a);
return (up - v.begin());
}')
min(which(v>a))
min_index(v,a)
max(which(v<a2))
max_index(v,a2)
v <- sort(runif(1e7,0,1000));  #example
min(which(v>a))
min_index(v,a)
max(which(v<a2))
max_index(v,a2)
findInterval(a,v)
findInterval(a2,v)
min(which(v>a))
min_index(v,a)
findInterval(a,v)
max(which(v<a2))
max_index(v,a2)
findInterval(a2,v)
min(which(v>a))
min_index(v,a)
findInterval(a,v)
max(which(v<a2))
max_index(v,a2)
findInterval(a2,v)
findInterval(a,v, all.inside=TRUE)
min(which(v>=a))
min_index(v,a)
findInterval(a,v)
set.seed(45356)
# Load required packages
library(REPPlab)
EPPlabAgg
library(mclust)
# Load required packages
library(REPPlab)
library(ICS)
library(LDRTools)
library(clue)
library(mclust)
# Load required packages
library(REPPlab)
library(ICS)
library(LDRTools)
library(clue)
library(mclust)
# Function to create the data
createData <- function(n1,n2=NULL,n3=NULL,m1,m2=NULL,m3=NULL,c1,c2=NULL,c3=NULL, mixMatrix=TRUE){
p <- length(m1)
if(is.null(n2)) n2 <- n1
if(is.null(n3)) n3 <- n1
if(is.null(m2)) m2 <- m1
if(is.null(m3)) m3 <- m1
if(is.null(c2)) c2 <- c1
if(is.null(c3)) c3 <- c1
X1 <- rmvnorm(n1, m1, c1)
X2 <- rmvnorm(n2, m2, c2)
X3 <- rmvnorm(n3, m3, c3)
X.comps <- rbind(X1,X2,X3)
if(mixMatrix){
A <- matrix(rnorm(p^2),nrow=p)
#X <- X.comps %*% t(A)
#X <- X.comps %*% Re(eigen(A)$vectors)
X <- X.comps %*% eigen(crossprod(A))$vectors
} else {
X <- X.comps
}
X
}
sim.data <- createData(n1=100,
n2=100,
n3=100,
m1=c(-1,-0.58,rep(0,8)),
m2=c(1,-0.58,rep(0,8)),
m3=c(0,1.15,rep(0,8)),
c1=diag(c(0.1,0.2,rep(1,8))),
#c1=diag(10)
mixMatrix=TRUE)
REPPres.fried <- EPPlab(sim.data, PPalg="Tribe", PPindex="Friedman", n.simu=100, maxiter=200, sphere=TRUE)
REPPres.kmax <- EPPlab(sim.data, PPalg="Tribe", PPindex="KurtosisMax", n.simu=100, maxiter=200, sphere=TRUE)
REPPres.kmin <- EPPlab(sim.data, PPalg="Tribe", PPindex="KurtosisMin", n.simu=100, maxiter=200, sphere=TRUE)
EPPlabAgg(REPPres.fried, "inverse")
EPPlabAgg(REPPres.fried, "sq.inverse")
EPPlabAgg(REPPres.fried, "inverse")
EPPlabAgg(REPPres.fried, "cum")
eppList <- list(REPPres.fried, REPPres.kmax, REPPres.kmin)
EPPlabAgg(eppList, "inverse")
EPPlabAgg(eppList, "sq.inverse")
EPPlabAgg(eppList, "inverse")
EPPlabAgg(eppList, "cum")
EPPlabAgg(eppList, "cum", percentage=0.8)
EPPlabAgg(eppList, "cum", percentage=0.6)
rm(list=ls())
clear()
R
q()
setwd("/home//fischuu/git/fischuu.github.io//lectures//IntroductionToR")
titanic <- read.table("data/titanic.txt")
titanic <- read.table("data/titanic.txt", sep=",")
head(titanic)
titanic <- read.table("data/titanic.txt", sep=",", header=TRUE)
head(titanic)
dim(titanic)
sum(titanic$survived)
titanic$pclass
head(titanic)
barplot(survived~pclass, data=titanic)
table(survived~pclass, data=titanic)
table(survived ~ pclass, data=titanic)
table(survived,pclass, data=titanic)
?table
attach(titanic)
table(survived,pclass)
barplot(survived~pclass)
prodtable(survived,pclass)
apropos("table")
prop.table(survived,pclass)
prop.table(survived~pclass)
table(survived,pclass)
table(survived,pclass) / nrow(titanic)
temp <- table(survived~pclass)
temp <- table(survived,pclass)
temp
proptable(temp)
prop.table(temp)
head(titanic)
titanic <- read.table("data/titanic3.csv", sep=",", header=TRUE)
head(titanic)
hist(titanic$fare)
titanic$fare
titanic$fare*243
titanic$fare
plot(titanic$fare)
plot(titanic$fare,titanic$survived)
boxplot(titanic$fare,titanic$survived)
boxplot(log(titanic$fare),titanic$survived)
head(titanic)
titanic$age
boxplot(titanic$age)
boxplot(titanic$age~titanic$pclass)
head(titanic)
table(titanic$pclass, titanic$embarked)
table(titanic$survived, titanic$embarked)
table(titanic$survived,titanic$age)
boxplot(titanic$age ~titanic$survived)
prop.table(titanic$age ~titanic$sex)
table(titanic$age ~titanic$sex)
table(titanic$age ,titanic$sex)
table(titanic$survived ,titanic$sex)
head(titanic)
titanic$farte
titanic$fare
hist(titanic$fare)
plot(titanic$fare)
titanic$survived
titanic$fares[titanic$survived==1]
titanic$fare[titanic$survived==1]
min(titanic$fare[titanic$survived==1])
sort(titanic$fare[titanic$survived==1])
sort(titanic$fare[titanic$survived==0])
boxplot(titanic$fare~titanic$sex)
subset(titanic, sex==1)
subset(titanic, sex=1)
head(subset(titanic, sex=1))
head(subset(titanic, pclass=1))
subset(titanic, pclass=1)
subset(titanic, pclass==1)
subset(titanic, sex==1)
subset(titanic, sex=="female")
head(subset(titanic, sex=="female"))
dim(subset(titanic, sex=="female"))
class1data <- subset(titanic, pclass==1)
boxplot(fare ~ sex, data=class1data)
boxplot(fare ~ sex, data=subset(titanic, pclass==1))
boxplot(fare ~ sex, data=subset(titanic, pclass==2))
boxplot(fare ~ sex, data=subset(titanic, pclass==3))
table(titanic$embarked)
plot(age ~ survived, data=titanic)
boxplot(age ~ survived, data=titanic)
table(age ~ survived, data=titanic)
table(age,survived, data=titanic)
table(titanic$age,titanic$survived)
table(titanic$age,titanic$survived)
ageSurv <- table(titanic$age,titanic$survived)
boxplot(age ~ survived, data=titanic)
ageSurv
ageSurv[,2]/(ageSurv[,1] + ageSurv[,2])
plot(ageSurv[,2]/(ageSurv[,1] + ageSurv[,2]))
survProportion <- ageSurv[,2]/(ageSurv[,1] + ageSurv[,2])
plot(survProportion)
loess.smooth(survProportion)
loess.smooth(1:length(survProportion),survProportion)
plot(survProportion)
lines(loess.smooth(1:length(survProportion),survProportion))
lines(loess.smooth(1:length(survProportion),survProportion), col="red")
plot(survProportion)
lines(loess.smooth(1:length(survProportion),survProportion), col="red", lwd=2)
lines(scatter.smooth(1:length(survProportion),survProportion), col="red", lwd=2)
plot(survProportion)
lines(scatter.smooth(1:length(survProportion),survProportion), col="red", lwd=2)
lines(loess.smooth(1:length(survProportion),survProportion), col="red", lwd=2)
?loess.smooth
survProportion <- ageSurv[,2]/(ageSurv[,1] + ageSurv[,2])
plot(survProportion)
lines(loess.smooth(1:length(survProportion),survProportion, span=0.2), col="red", lwd=2)
lines(loess.smooth(1:length(survProportion),survProportion, span=0.1), col="red", lwd=2)
lines(loess.smooth(1:length(survProportion),survProportion, span=0.3), col="red", lwd=2)
plot(survProportion)
lines(loess.smooth(1:length(survProportion),survProportion, span=0.3), col="red", lwd=2)
boxplot(age ~ survived, data=titanic)
ageSurv <- table(titanic$age,titanic$survived)
survProportion <- ageSurv[,2]/(ageSurv[,1] + ageSurv[,2])
survProportion
plot(survProportion)
lines(loess.smooth(1:length(survProportion),survProportion, span=0.3), col="red", lwd=2)
titanic$name
strsplit(titanic,", ")
strsplit(titanic$name,", ")
strsplit(as.character(titanic$name),", ")
sapply(strsplit(as.character(titanic$name),", "),"[",2)
strsplit(sapply(strsplit(as.character(titanic$name),", "),"[",2)," ")
sapply(strsplit(sapply(strsplit(as.character(titanic$name),", "),"[",2)," "),"[",1)
table(sapply(strsplit(sapply(strsplit(as.character(titanic$name),", "),"[",2)," "),"[",1))
sapply(strsplit(sapply(strsplit(as.character(titanic$name),", "),"[",2)," "),"[",1)=="the"
titanic[sapply(strsplit(sapply(strsplit(as.character(titanic$name),", "),"[",2)," "),"[",1)=="the",]
table(sapply(strsplit(sapply(strsplit(as.character(titanic$name),", "),"[",2)," "),"[",1))
titanic[sapply(strsplit(sapply(strsplit(as.character(titanic$name),", "),"[",2)," "),"[",1)=="Jonkheer.",]
females <- subset(titanic, sex=="female")
table(females$survided, females$pclass)
table(females$survived, females$pclass)
prop.table(table(females$survived, females$pclass))
table(females$survived, females$pclass)
